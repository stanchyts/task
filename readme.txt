База данных проекта состоит из двух таблиц:
    users с полями:
	    1. id - айди пользователя (auto_increment)
		2. login - логин пользователя
		3. psw - захешированный пароль пользователя
		4. pathByImage - путь к аватарке на сервере
		5. favContacts - поле из айди контактов, которые пользователь добавил в избранное, с разделитем &
	contacts с полями:
	    1. id - айди контакта (auto_increment)
		2. name - имя контакта
		3. tel - телефон контакта
		
Проект состоит из пяти папок:
    img - папка, куда сохраняются фото пользователей при регистрации
    css с файлом:
	    1. styles.css - файл стилей
    lib с файлами:
	    1. lib.php - файл с набором классов:
		    а) db - класс для работы с регистрацией и входом, который включает в себя:
			
			    приватное поле userDb - имя пользователя для подключения к бд 
				приватное поле pswDb - пароль пользователя для подключения к бд 
				приватное поле hostByDb - хост 
				приватное поле nameByDb - имя бд
				
				конструктор по умолчанию - для определения значения полей
				
				публичный метод sqlQueryValidateEnter - для выполнения проверки введенных данных, чтоб войти в систему. принимает аргументами имя и пароль (md5). в случае корректно введенных данных создается экземпяр класса user, создается сессия, выполняется перенаправление на страницу системы с контактами. в случае ввода неккоректных данных, пользователь будет возвращен на страницу входа и будет выведено сообщение об ощибке.
				
				публичный метод sqlQueryAddNewUser - для добавления нового пользователя для входа в систему. в качестве аргументов принимает имя пользователя, пароль пользователя (md5), имя выбранного фото и временный путь к фото. выполняется проверка на существования пользователя с таким же логином. если проверка успешна, пользователь будет возвращен на страницу регистрации с сообщением. в случае корректного ввода, будет произведено копирования фото на сервер в папку img, а так же вставка в таблицу users новых данных, после чего пользователь будет перенаправлен на страницу входа с сообщением об успешной регистрации.
				
			б) user - класс для работы с пользователем в системе, который включает в себя:
			    приватное поле userDb - имя пользователя для подключения к бд 
				приватное поле pswDb - пароль пользователя для подключения к бд 
				приватное поле hostByDb - хост 
				приватное поле nameByDb - имя бд
	            приватное поле login - логин пользователя
	            приватное поле pathByImage - путь к аватарке пользователя
	            приватное поле id - айди пользователя
				приватное поле favContacts - поле, где хранится добавленные в избранное айди контактов (чтоб не обращаться каждый раз к бд, когда пользователь удаляет или добавляет избранное, проводить изменение именно с переменной. в бд информация о избранном будет обновлена только при выходе)
				
                конструктор с параметрами - принимает в качестве аргументов логин, путь к аватарке и список избранного пользователя. инициализируются все поля класса.	
				
                публичное свойство getLogin - получение логина пользователя из вне
				публичное свойство getPathByImage - получение пути аватарки пользователя из вне
				
				публичный метод userIsEmptyFavContact - проверка на пустоту списка избранного для данного пользователя. возвращает true или false
				
				публичный метод userAddFavContact - принимает в качестве аргумента айди контакта, который пользователь добавил в избранное. осуществляется проверка добавлял ли пользователь уже этот контакт, после чего выполняется добавление к полю favContacts с разделителем &
				
				публичный метод userGetFavContacts - возвращает массив айди избранных контактов пользователя, который получен из поля favContacts
				
				публичный метод userDelFavContact - принимает в качестве аргумента айди контакта, который нужно удалить. в поле favContacts идет разбор по разделителю, выполняется поиск и удаление нужного контакта, после чего снова собирается поле favContacts с разделителем &.
				
				публичный метод sqlQueryGetContact - принимает в качестве аргумента айди контакта, после чего выполняется запрос к бд и извлекается вся информация о контакте. возвращает массив с информацией.
				
				публичный метод sqlQueryUpdateFavContacts - вызывается при выходе из системы пользователем, осуществляет запрос к бд, где обновляется поле избранных контактов.
				
				публичный метод sqlQueryGetContacts - возвращает массив всех контактов.
	main c файлами:
	    1. index.php - страница с формой входа, которая состоит из поля для ввода логина, которое обрабатывается регулярным выражением для исключения неккоректного ввода, и поля пароля. так же при успешной регистрации или неправильных данных, пользователь увидит сообщение об ошибке. поля для заполнения обязательны. присутствует кнопка для перехода на страницу регистрации.
		2. registration.php - страница с формой регистрации, которая состоит из поля для ввода логина, которое обрабатывается регулярным выражением для исключения неккоректного ввода, поля пароля и поля для выбора аватарки. если будет выбран файл другой, кроме .png, .gif, .jpeg, а так же при выборе логина, который существует, пользователь увидит сообщение об ошибке. поля для заполнения обязательны.
		3. adduser.php - страница, которая обрабатывает данные из формы регистрации и передает их в метод sqlQueryAddNewUser экземпяра класса db
		4. validate.php - страница, которая обрабатывает данные из формы входа и передает их в метод sqlQueryValidateEnter экземпляра класса db
	admin с файлами:
	    1. index.php - страница с отображением всех общих контактов в виде блоков, где у каждого контакта есть кнопка добавления в избранное пользователем
		2. addfav.php - страница для обработки добавления айди контакта в избранное пользователя с помощью метода userAddFavContact экземпляра класса user, который был создан на этапе входа и сохранен благодаря сессии
		3. fav.php - страница с отображением всех общих контактов в виде блоков, где у каждого контакта есть кнопка удаления из избранного пользователя
		4. delfav.php - страница для обработки удаления айди контакта из избранного  с помощью метода userDelFavContact экземпляра класса user, который был создан на этапе входа и сохранен благодаря сессии
		5. info.php - страница отображения аватарки пользователя и его логина
		6. exit.php - страница выхода пользователя из системы, где в бд обновляется поле массива избранных контактов, а так же обнуляется сессия
		
	
	
				
				
				
				
				